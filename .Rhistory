ggplot(m, aes(x=long, y=lat, group=group, fill=avg_firms_count)) +
coord_map()
ggplot(m, aes(x=long, y=lat, group=group, fill=avg_firms_count)) +
geom_polygon()
coord_map()
ggplot(m, aes(x=long, y=lat, group=group, fill=avg_firms_count)) +
geom_polygon() +
coord_map()
ggplot(m, aes(x=long, y=lat, group=group, fill=avg_firms_count)) +
geom_polygon()
state_map <- map_data('state')
ggplot(m, aes(x=long, y=lat, group=group, fill=avg_firms_count)) +
geom_polygon() +
geom_path(data=state_map, colour='black')
ggplot(m, aes(x=long, y=lat, group=group)) +
geom_polygon(aes(fill=avg_firms_count)) +
geom_path(data=state_map, colour='black')
table(m$state)
anyNA(m$avg_firms_count)
m[m$avg_firms_count == NA,]
table(m[m$avg_firms_count == NA,]$state
)
theme_clean <- function(base_size = 12) {
require(grid)
theme_grey(base_size) %+replace%
theme(
axis.title      =   element_blank(),
axis.text       =   element_blank(),
panel.background    =   element_blank(),
panel.grid      =   element_blank(),
axis.ticks.length   =   unit(0,"cm"),
axis.ticks.margin   =   unit(0,"cm"),
panel.margin    =   unit(0,"lines"),
plot.margin     =   unit(c(0,0,0,0),"lines"),
complete = TRUE
)
}
ggplot(m, aes(x=long, y=lat, group=group)) +
geom_polygon(aes(fill=avg_firms_count)) +
geom_path(data=state_map, colour='black') +
theme_clean()
ggplot(m, aes(x=long, y=lat, group=group)) +
geom_polygon(aes(fill=avg_firms_count)) +
geom_path(data=state_map, colour='white') +
theme_clean()
head(state_map)
?geom_path
ggplot(m, aes(x=long, y=lat, group=group)) +
geom_polygon(aes(fill=avg_firms_count)) +
geom_path(data=state_map, colour='white', size=10) +
theme_clean()
ggplot(m, aes(x=long, y=lat, group=group)) +
geom_path(data=state_map, colour='white', size=10) +
geom_polygon(aes(fill=avg_firms_count)) +
theme_clean()
ggplot(m, aes(x=long, y=lat, group=group)) +
geom_path(data=state_map, colour='white', size=30) +
geom_polygon(aes(fill=avg_firms_count)) +
theme_clean()
ggplot(m, aes(x=long, y=lat, group=group)) +
geom_path(data=state_map, colour='white', size=30) +
geom_polygon(aes(fill=avg_firms_count)) +
scale_fill_ptol() +
theme_clean()
library(ggthemes)
ggplot(m, aes(x=long, y=lat, group=group)) +
geom_path(data=state_map, colour='white', size=30) +
geom_polygon(aes(fill=avg_firms_count)) +
scale_fill_ptol() +
theme_clean()
ggplot(m, aes(x=long, y=lat, group=group)) +
geom_path(data=state_map, colour='white', size=30) +
geom_polygon(aes(fill=avg_firms_count)) +
scale_fill_ptol()
ggplot(m, aes(x=long, y=lat, group=group)) +
geom_polygon(data=state_map, colour='white', size=30) +
geom_polygon(aes(fill=avg_firms_count)) +
scale_fill_ptol()
ggplot(m, aes(x=long, y=lat, group=group)) +
geom_polygon(data=state_map, colour='white', size=30) +
geom_polygon(aes(fill=avg_firms_count))
head(state_map)
ggplot(m, aes(x=long, y=lat, group=group)) +
geom_polygon(aes(fill=avg_firms_count)) +
geom_map(data=state_map, map=state_map, aes(map_id=region),
color='white', size=0.15)
ggplot(m, aes(x=long, y=lat, group=group)) +
#geom_polygon(aes(fill=avg_firms_count)) +
geom_map(data=state_map, map=state_map, aes(map_id=region),
color='white', size=0.15)
ggplot(m, aes(x=long, y=lat, group=group)) +
geom_polygon(aes(fill=avg_firms_count)) +
geom_map(data=state_map, map=state_map, aes(map_id=region),
color='white', size=10)
ggplot(m, aes(x=long, y=lat, group=group)) +
geom_polygon(aes(fill=avg_firms_count)) +
geom_map(data=state_map, map=state_map, aes(map_id=region),
color='white', size=5)
head(state_map)
head(m)
state_map <- map_data('state')
county_map <- map_data('county')
head(county_map)
head(US)
#aggregate tracts up to county level
library(dplyr)
#merge tracts
t_base <- inner_join(tract_count, sld_tract, by='tract')
t_base$n[t_base$n>9] <- 9
if(!'tmap' %in% installed.packages()) install.packages('tmap')
library(tmap)      # package for plotting
if(!'readxl' %in% installed.packages()) install.packages('readxl')
library(readxl)    # for reading Excel
if(!'maptools' %in% installed.packages()) install.packages('maptools')
library(maptools)
t <- t_base
t$county <- substr(t$tract, 1,5)
county <- t %>%
group_by(county) %>%
summarize(state = first(state),
tot_pop = sum(totpop10),
avg_firms_pop = (sum(n*totpop10)/sum(totpop10)),
avg_firms_count = mean(n))
colnames(county)[1] <- 'FIPS'
county <- county[complete.cases(county),]
f <- tempfile()
download.file("http://www2.census.gov/geo/tiger/GENZ2010/gz_2010_us_050_00_20m.zip", destfile = f)
unzip(f, exdir = ".")
#uncomment if data doesn't load, but this is long
US <- tmaptools::read_shape("gz_2010_us_050_00_20m.shp")
US <- US[!(US$STATE %in% c("02","15","72")),]
US$FIPS <- paste0(US$STATE, US$COUNTY)
US <- tmaptools::append_data(US, county, key.shp = "FIPS", key.data = "FIPS")
qtm(US, fill = "avg_firms_count")
#library(ggplot2)
#library()
ggplot(m, aes(x=long, y=lat, group=group)) +
geom_polygon(aes(fill=avg_firms_count)) +
geom_map(data=state_map, map=state_map, aes(map_id=region),
color='white', size=5)
?qtm
qtm(US, fill = "avg_firms_count", fill.pallete='-Blues')
qtm(US, fill = "avg_firms_count", fill.pallete='Blues')
qtm(US, fill = "avg_firms_count", fill.pallete='div')
qtm(US, fill = "avg_firms_pop", fill.pallete='div')
qtm(US, fill = "avg_firms_pop", fill.pallete='div')
US_states <- unionSpatialPolygons(US, IDs=US$STATE)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("PCT_OBESE_ADULTS10", border.col = "grey30", title="") +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="2010 Adult Obesity by County, percent",
title.position = c("center", "top"),
legend.text.size=1)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_pop", border.col = "grey30", title="") +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="2010 Adult Obesity by County, percent",
title.position = c("center", "top"),
legend.text.size=1)
t$county
head(t)
#aggregate tracts up to county level
library(dplyr)
#merge tracts
t_base <- inner_join(tract_count, sld_tract, by='tract')
t_base$n[t_base$n>9] <- 9
if(!'tmap' %in% installed.packages()) install.packages('tmap')
library(tmap)      # package for plotting
if(!'readxl' %in% installed.packages()) install.packages('readxl')
library(readxl)    # for reading Excel
if(!'maptools' %in% installed.packages()) install.packages('maptools')
library(maptools)
t <- t_base
t$county <- substr(t$tract, 1,5)
t_test <- dplyr::filter(t, maxaddown != 0, maxadup !=0)
county <- t %>%
group_by(county) %>%
summarize(state = first(state),
tot_pop = sum(totpop10),
avg_firms_pop = (sum(n*totpop10)/sum(totpop10)),
avg_firms_count = mean(n))
colnames(county)[1] <- 'FIPS'
county <- county[complete.cases(county),]
f <- tempfile()
download.file("http://www2.census.gov/geo/tiger/GENZ2010/gz_2010_us_050_00_20m.zip", destfile = f)
unzip(f, exdir = ".")
#uncomment if data doesn't load, but this is long
US <- tmaptools::read_shape("gz_2010_us_050_00_20m.shp")
US <- US[!(US$STATE %in% c("02","15","72")),]
US$FIPS <- paste0(US$STATE, US$COUNTY)
US <- tmaptools::append_data(US, county, key.shp = "FIPS", key.data = "FIPS")
qtm(US, fill = "avg_firms_pop", fill.pallete='div')
US_states <- unionSpatialPolygons(US, IDs=US$STATE)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_pop", border.col = "grey30", title="") +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="2010 Adult Obesity by County, percent",
title.position = c("center", "top"),
legend.text.size=1)
#library(ggplot2)
#library()
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_count", border.col = "grey30", title="") +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="2010 Adult Obesity by County, percent",
title.position = c("center", "top"),
legend.text.size=1)
??tm
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_count", border.col = "grey30", title="", palette=list('Blues')) +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="2010 Adult Obesity by County, percent",
title.position = c("center", "top"),
legend.text.size=1)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_count", border.col = "grey30", title="", fill.palette='Blues') +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="2010 Adult Obesity by County, percent",
title.position = c("center", "top"),
legend.text.size=1)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_count", border.col = "grey30", title="", palette='Blues') +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="2010 Adult Obesity by County, percent",
title.position = c("center", "top"),
legend.text.size=1)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_count", border.col = "grey30", title="", palette='Blues') +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="County Average Firm Counts",
title.position = c("center", "top"),
legend.text.size=1)
RColorBrewer::display.brewer.all()
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_count", border.col = "grey30", title="", palette='Spectral') +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="County Average Firm Counts",
title.position = c("center", "top"),
legend.text.size=1)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_count", border.col = "grey30", title="", palette='Spectral') +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="County Average Firm Counts",
title.position = c("center", "top"),
legend.text.size=1)
RColorBrewer::display.brewer.all()
show_col(ptol_pal()(6))
library('scales')
show_col(ptol_pal()(6))
show_col(ptol_pal()(4))
show_col(ptol_pal()(9))
show_col(ptol_pal()(2))
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_count", border.col = "grey30", title="", palette=scale_color_gradient(low='#4477AA',high='#CC6677')) +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="County Average Firm Counts",
title.position = c("center", "top"),
legend.text.size=1)
c <- colorRampPalette(c('#4477AA',"#CC6677"))
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_count", border.col = "grey30", title="", palette='c') +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="County Average Firm Counts",
title.position = c("center", "top"),
legend.text.size=1)
scale_color_brewer()
display.brewer.all(0)
display.brewer.all()
library(RColorBrewer)
display.brewer.all()
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_count", border.col = "grey30", title="", palette=c) +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="County Average Firm Counts",
title.position = c("center", "top"),
legend.text.size=1)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_count", border.col = "grey30", title="") +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="County Average Firm Counts",
title.position = c("center", "top"),
legend.text.size=1)
??title.position
?title.position
library(tmap)
library(maptools)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_count", border.col = "grey30", title="") +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="County Average Firm Counts",
title.position = c("center", "top"),
legend.text.size=1)
US <- tmaptools::append_data(US, county, key.shp = "FIPS", key.data = "FIPS")
qtm(US, fill = "avg_firms_count", fill.pallete='div')
#US_states <- unionSpatialPolygons(US, IDs=US$STATE)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_count", border.col = "grey30", title="") +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="County Average Firm Counts",
title.position = c("center", "top"),
legend.text.size=1)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_count", border.col = "grey30", title="") +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5) +
tm_layout(title="County Average Firm Counts",
title.position = c("center"),
legend.text.size=1)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_count", border.col = "grey30", title="") +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_pop", border.col = "grey30", title="") +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5)
t$county <- substr(t$tract, 1,5)
t_test <- dplyr::filter(t, maxaddown != 0, maxadup !=0)
county <- t %>%
group_by(county) %>%
summarize(state = first(state),
tot_pop = sum(totpop10),
avg_firms_pop = (sum(n*totpop10)/sum(totpop10)),
avg_firms_count = mean(n))
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_pop", border.col = "grey30", title="") +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_pop", border.col = "grey30", title="") +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5)
setwd('C:/Users/Jamie/Google Drive/Thesis/Writings/ThesisLYX/Plots')
ggsave('County_plot', height = 3, width=5, units='in', dpi=600)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_pop", border.col = "grey30", title="", palette='blues') +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_pop", border.col = "grey30", title="", palette='Blues') +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5)
#aggregate tracts up to county level
library(dplyr)
#merge tracts
t_base <- inner_join(tract_count, sld_tract, by='tract')
t_base$n[t_base$n>9] <- 9
if(!'tmap' %in% installed.packages()) install.packages('tmap')
library(tmap)      # package for plotting
if(!'readxl' %in% installed.packages()) install.packages('readxl')
library(readxl)    # for reading Excel
if(!'maptools' %in% installed.packages()) install.packages('maptools')
library(maptools)
t <- t_base
t$county <- substr(t$tract, 1,5)
t_test <- dplyr::filter(t, maxaddown != 0, maxadup !=0)
county <- t_test %>%
group_by(county) %>%
summarize(state = first(state),
tot_pop = sum(totpop10),
avg_firms_pop = (sum(n*totpop10)/sum(totpop10)),
avg_firms_count = mean(n))
colnames(county)[1] <- 'FIPS'
county <- county[complete.cases(county),]
f <- tempfile()
download.file("http://www2.census.gov/geo/tiger/GENZ2010/gz_2010_us_050_00_20m.zip", destfile = f)
unzip(f, exdir = ".")
#uncomment if data doesn't load, but this is long
US <- tmaptools::read_shape("gz_2010_us_050_00_20m.shp")
US <- US[!(US$STATE %in% c("02","15","72")),]
US <- US[!(US$STATE %in% c("02","15","72")),]
US <- US[!(US$STATE %in% c("02")),]
US$FIPS <- paste0(US$STATE, US$COUNTY)
US <- tmaptools::append_data(US, county, key.shp = "FIPS", key.data = "FIPS")
qtm(US, fill = "avg_firms_count", fill.pallete='div')
#US_states <- unionSpatialPolygons(US, IDs=US$STATE)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_pop", border.col = "grey30", title="", palette='Blues') +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5)
US <- US[!(US$STATE %in% c("02", '15')),]
head(US)
table(US$STATE)
US <- US[!(US$STATE %in% c(02, 15)),]
table(US$state)
US <- tmaptools::read_shape("gz_2010_us_050_00_20m.shp")
US <- US[!(US$state %in% c('AK','PR','HI')),]
US <- filter(US, !STATE %in% c('02','15','72'))
library(data.table)
US <- US[!(US$STATE %in% c("02","15","72")),]
US$STATE %in% c('02','15','72')
#aggregate tracts up to county level
library(dplyr)
t_base <- inner_join(tract_count, sld_tract, by='tract')
library(Rcpp)
install.packages('Rcpp')
library(dplyr)
#aggregate tracts up to county level
library(dplyr)
#merge tracts
t_base <- inner_join(tract_count, sld_tract, by='tract')
t_base$n[t_base$n>9] <- 9
if(!'tmap' %in% installed.packages()) install.packages('tmap')
library(tmap)      # package for plotting
if(!'readxl' %in% installed.packages()) install.packages('readxl')
library(readxl)    # for reading Excel
if(!'maptools' %in% installed.packages()) install.packages('maptools')
library(maptools)
t <- t_base
t$county <- substr(t$tract, 1,5)
t_test <- dplyr::filter(t, maxaddown != 0, maxadup !=0)
county <- t_test %>%
group_by(county) %>%
summarize(state = first(state),
tot_pop = sum(totpop10),
avg_firms_pop = (sum(n*totpop10)/sum(totpop10)),
avg_firms_count = mean(n))
colnames(county)[1] <- 'FIPS'
county <- county[complete.cases(county),]
f <- tempfile()
download.file("http://www2.census.gov/geo/tiger/GENZ2010/gz_2010_us_050_00_20m.zip", destfile = f)
unzip(f, exdir = ".")
#uncomment if data doesn't load, but this is long
US <- tmaptools::read_shape("gz_2010_us_050_00_20m.shp")
US <- US[!(US$STATE %in% c("02","15","72")),]
US <- US[!(US$STATE %in% c("02")),]
US <- US[!(US$STATE %in% c("02")),]
US <- US[!(US$STATE %in% c("15")),]
US <- US[!(US$STATE %in% c("72")),]
US$FIPS <- paste0(US$STATE, US$COUNTY)
US <- tmaptools::append_data(US, county, key.shp = "FIPS", key.data = "FIPS")
qtm(US, fill = "avg_firms_count", fill.pallete='div')
#US_states <- unionSpatialPolygons(US, IDs=US$STATE)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_pop", border.col = "grey30", title="", palette='Blues') +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5)
US <- US[!(US$STATE != "02"),]
US <- US[!(US$STATE != "15"),]
US <- US[!(US$STATE != "72"),]
US$FIPS <- paste0(US$STATE, US$COUNTY)
US <- tmaptools::read_shape("gz_2010_us_050_00_20m.shp")
US <- US[(US$STATE != "02"),]
US <- US[(US$STATE != "15"),]
US <- US[(US$STATE != "72"),]
US$FIPS <- paste0(US$STATE, US$COUNTY)
US <- tmaptools::append_data(US, county, key.shp = "FIPS", key.data = "FIPS")
#qtm(US, fill = "avg_firms_count", fill.pallete='div')
#US_states <- unionSpatialPolygons(US, IDs=US$STATE)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_pop", border.col = "grey30", title="", palette='Blues') +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5)
setwd('C:/Users/Jamie/Google Drive/Thesis/Writings/ThesisLYX/Plots')
ggsave('County_plot', height = 3, width=5, units='in', dpi=600)
library(ggplot2)
setwd('C:/Users/Jamie/Google Drive/Thesis/Writings/ThesisLYX/Plots')
ggsave('County_plot', height = 3, width=5, units='in', dpi=600)
ggsave('County_plot.png', height = 3, width=5, units='in', dpi=600)
setwd('C:/Users/Jamie/Google Drive/Thesis/Writings/ThesisLYX/Plots')
ggsave('County_plot.png', height = 3, width=5, units='in', dpi=600)
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_pop", border.col = "grey30", title="", palette='Blues') +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5)
setwd('C:/Users/Jamie/Google Drive/Thesis/Writings/ThesisLYX/Plots')
dev.copy(png, 'county_plot.png')
dev.off()
tm_shape(US, projection="+init=epsg:2163") +
tm_polygons("avg_firms_pop", border.col = "grey30", title="", palette='Blues') +
tm_shape(US_states) +
tm_borders(lwd=2, col = "black", alpha = .5)
citation(tmap)
library(tmap)
citation(tmap)
citation('tmap')
library(data.table)
citation('data.table')
save.image("C:/Users/Jamie/Google Drive/Thesis/Writings/ThesisLYX/R Global Environment/thesis_environment.RData")
# get correct root file
knitr::opts_knit$set(root.dir = 'C:/Users/Jamie/Documents/GitHub/march-madness')
# load packages
library(data.table)
library(dplyr)
library(magrittr)
library(ggplot2)
library(gridExtra)
library(ggExtra)
setwd('C:/Users/Jamie/Documents/GitHub/march-madness')
master <- data.table::fread('master_data.csv')
head(master)
lapply(master, class)
head(master$T)
levels(as.factor(master$T))
glimpse(master)
View(master)
